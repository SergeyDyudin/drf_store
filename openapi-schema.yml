openapi: 3.0.2
info:
  title: "Book store"
  version: "v1"
  description: "Схема взаимодействия с книжным магазином.<br><br>Авторизация сделана через JWT. И она потребуется для большей части запросов."
  contact:
    name: "Администратор"
    email: "sergeydyudin@yandex.ru"
servers:
  - url: http://127.0.0.1:8000
    description: Dev server
tags:
  - name: "Tokens (auth)"
    description: "Авторизация и обновление токенов"
  - name: "Accounts (Accounts)"
    description: "Действия для аккаунтов пользователей"
  - name: "Profiles (Accounts)"
    description: "Действия для профилей пользователей"
  - name: "Languages (Items)"
    description: "Языки для книг и журналов"
  - name: "Categories (Items)"
    description: "Категории для товаров"
  - name: "Authors (Items)"
    description: "Авторы книг"
  - name: "Genres (Items)"
    description: "Жанры книг"
  - name: "Publishers (Items)"
    description: "Издатели книг"
  - name: "Brands (Items)"
    description: "Брэнды фигурок"
  - name: "Items (Items)"
    description: "Все товары"
  - name: "Books (Items)"
    description: "Книги"
  - name: "Magazines (Items)"
    description: "Журналы"
  - name: "Figures (Items)"
    description: "Фигурки персонажей"
  - name: "History (Services)"
    description: "История покупок пользователя в магазине"
  - name: "Cart (Services)"
    description: "Корзина пользователя"
  - name: "Purchase (Services)"
    description: "Покупка товара"
  - name: "Rent (Services)"
    description: "Аренда товара"
security:
  - jwt_token: []
paths:
  # Accounts
  # Accounts (Accounts)
  /api/account/users/:
    get:
      operationId: listCustomUsers
      summary: "Получить список всех пользователей"
      description: "Список пользователей доступен только персоналу."
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetCustomUser"
          description: ""
      tags:
        - "Accounts (Accounts)"
    post:
      operationId: createCustomUser
      summary: Создать пользователя
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostCustomUser"
          description: ""
      tags:
        - "Accounts (Accounts)"
      security: []
  /api/account/users/{id}/:
    get:
      operationId: retrieveCustomUser
      summary: Получить аккаунт и профиль пользователя
      description: ""
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u043F\u043E\u043B\u044C\
            \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCustomUser"
          description: ""
      tags:
        - "Accounts (Accounts)"
    put:
      operationId: updateCustomUser
      summary: Обновить аккаунт и профиль пользователя целиком
      description: "Может только сам пользователь или администратор"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u043F\u043E\u043B\u044C\
            \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostCustomUser"
          description: ""
      tags:
        - "Accounts (Accounts)"
    patch:
      operationId: partialUpdateCustomUser
      summary: Обновить аккаунт и профиль пользователя частично
      description: "Может только сам пользователь или администратор"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u043F\u043E\u043B\u044C\
            \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostCustomUser"
          description: ""
      tags:
        - "Accounts (Accounts)"
    delete:
      operationId: destroyCustomUser
      summary: Удалить аккаунт и профиль пользователя
      description: "Удалить может только администратор"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u043F\u043E\u043B\u044C\
            \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - "Accounts (Accounts)"
  /api/account/activate/{uidb64}/{token}/:
    get:
      operationId: retrieveactivate_user
      summary: "Активировать аккаунт пользователя"
      description: "Активация через полученный на почту uidb64 и token"
      parameters:
        - name: uidb64
          in: path
          required: true
          description: ""
          schema:
            type: string
        - name: token
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: ""
      tags:
        - "Accounts (Accounts)"
      security: []
  /api/account/users/{id}/change_password/:
    patch:
      operationId: changePasswordCustomUser
      summary: "Сменить пароль пользователя"
      description: ""
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u043F\u043E\u043B\u044C\
            \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePassword"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ChangePassword"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ChangePassword"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePassword"
          description: ""
      tags:
        - "Accounts (Accounts)"
  /api/account/users/logout/:
    post:
      operationId: logoutCustomUser
      summary: "Разлогинить пользователя"
      description: Logout user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostCustomUser"
          description: ""
      tags:
        - "Accounts (Accounts)"
  /api/account/users/registration/:
    post:
      operationId: registrationCustomUser
      summary: "Создать пользователя"
      description: "Регистрация нового пользователя"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostCustomUser"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostCustomUser"
          description: ""
      tags:
        - "Accounts (Accounts)"
      security: []
  # Profiles (Accounts)
  /api/account/profiles/:
    get:
      operationId: listProfiles
      summary: "Получить список профилей пользователей"
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetProfile"
          description: ""
      tags:
        - "Profiles (Accounts)"
    post:
      operationId: createProfile
      summary: "Создать профиль пользователя"
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostProfile"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostProfile"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostProfile"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostProfile"
          description: ""
      tags:
        - "Profiles (Accounts)"
  /api/account/profiles/{id}/:
    get:
      operationId: retrieveProfile
      summary: "Получить профиль пользователя по id"
      description: ""
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this profile.
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProfile"
          description: ""
      tags:
        - "Profiles (Accounts)"
    put:
      operationId: updateProfile
      summary: "Обновить профиль пользователя целиком"
      description: ""
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this profile.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostProfile"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostProfile"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostProfile"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostProfile"
          description: ""
      tags:
        - "Profiles (Accounts)"
    patch:
      operationId: partialUpdateProfile
      summary: "Обновить профиль пользователя частично"
      description: ""
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this profile.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostProfile"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostProfile"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostProfile"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostProfile"
          description: ""
      tags:
        - "Profiles (Accounts)"
    delete:
      operationId: destroyProfile
      summary: "Удалить профиль пользователя по id"
      description: ""
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this profile.
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - "Profiles (Accounts)"

  # Items
  # Languages (Items)
  /api/items/languages/:
    get:
      operationId: listLanguages
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u044F\u0437\u044B\
        \u043A\u043E\u0432"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Language"
          description: ""
      tags:
        - "Languages (Items)"
      security: []
    post:
      operationId: createLanguage
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u044F\u0437\u044B\
        \u043A\u043E\u0432"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Language"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Language"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Language"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Language"
          description: ""
      tags:
        - "Languages (Items)"
  /api/items/languages/{id}/:
    get:
      operationId: retrieveLanguage
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u044F\u0437\u044B\
        \u043A\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u042F\u0437\u044B\u043A\
            ."
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Language"
          description: ""
      tags:
        - "Languages (Items)"
      security: []
    put:
      operationId: updateLanguage
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u044F\u0437\u044B\
        \u043A\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u042F\u0437\u044B\u043A\
            ."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Language"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Language"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Language"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Language"
          description: ""
      tags:
        - "Languages (Items)"
    patch:
      operationId: partialUpdateLanguage
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u044F\u0437\u044B\
        \u043A\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u042F\u0437\u044B\u043A\
            ."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Language"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Language"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Language"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Language"
          description: ""
      tags:
        - "Languages (Items)"
    delete:
      operationId: destroyLanguage
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u044F\u0437\u044B\
        \u043A\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u042F\u0437\u044B\u043A\
            ."
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - "Languages (Items)"
  # Categories (Items)
  /api/items/categories/:
    get:
      operationId: listCategorys
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u043A\u0430\u0442\
        \u0435\u0433\u043E\u0440\u0438\u0439"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
          description: ""
      tags:
        - "Categories (Items)"
      security: []
    post:
      operationId: createCategory
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u043A\u0430\u0442\
        \u0435\u0433\u043E\u0440\u0438\u0439"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Category"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
          description: ""
      tags:
        - "Categories (Items)"
  /api/items/categories/{id}/:
    get:
      operationId: retrieveCategory
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u043A\u0430\u0442\
        \u0435\u0433\u043E\u0440\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u041A\u0430\u0442\u0435\
            \u0433\u043E\u0440\u0438\u044F."
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
          description: ""
      tags:
        - "Categories (Items)"
      security: []
    put:
      operationId: updateCategory
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u043A\u0430\u0442\
        \u0435\u0433\u043E\u0440\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u041A\u0430\u0442\u0435\
            \u0433\u043E\u0440\u0438\u044F."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Category"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
          description: ""
      tags:
        - "Categories (Items)"
    patch:
      operationId: partialUpdateCategory
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u043A\u0430\u0442\
        \u0435\u0433\u043E\u0440\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u041A\u0430\u0442\u0435\
            \u0433\u043E\u0440\u0438\u044F."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Category"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
          description: ""
      tags:
        - "Categories (Items)"
    delete:
      operationId: destroyCategory
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u043A\u0430\u0442\
        \u0435\u0433\u043E\u0440\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u041A\u0430\u0442\u0435\
            \u0433\u043E\u0440\u0438\u044F."
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - "Categories (Items)"
  # Authors (Items)
  /api/items/authors/:
    get:
      operationId: listAuthors
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0430\u0432\u0442\
        \u043E\u0440\u043E\u0432"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Author"
          description: ""
      tags:
        - "Authors (Items)"
      security: []
    post:
      operationId: createAuthor
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0430\u0432\u0442\
        \u043E\u0440\u043E\u0432"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Author"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Author"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Author"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Author"
          description: ""
      tags:
        - "Authors (Items)"
  /api/items/authors/{id}/:
    get:
      operationId: retrieveAuthor
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0430\u0432\u0442\
        \u043E\u0440\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0430\u0432\u0442\u043E\
            \u0440."
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Author"
          description: ""
      tags:
        - "Authors (Items)"
      security: []
    put:
      operationId: updateAuthor
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0430\u0432\u0442\
        \u043E\u0440\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0430\u0432\u0442\u043E\
            \u0440."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Author"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Author"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Author"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Author"
          description: ""
      tags:
        - "Authors (Items)"
    patch:
      operationId: partialUpdateAuthor
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0430\u0432\u0442\
        \u043E\u0440\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0430\u0432\u0442\u043E\
            \u0440."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Author"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Author"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Author"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Author"
          description: ""
      tags:
        - "Authors (Items)"
    delete:
      operationId: destroyAuthor
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0430\u0432\u0442\
        \u043E\u0440\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0430\u0432\u0442\u043E\
            \u0440."
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - "Authors (Items)"
  # "Genres (Items)"
  /api/items/genres/:
    get:
      operationId: listGenres
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0436\u0430\u043D\
        \u0440\u043E\u0432"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Genre"
          description: ""
      tags:
        - "Genres (Items)"
      security: []
    post:
      operationId: createGenre
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0436\u0430\u043D\
        \u0440\u043E\u0432"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Genre"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Genre"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Genre"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Genre"
          description: ""
      tags:
        - "Genres (Items)"
  /api/items/genres/{id}/:
    get:
      operationId: retrieveGenre
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0436\u0430\u043D\
        \u0440\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0416\u0430\u043D\u0440\
            ."
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Genre"
          description: ""
      tags:
        - "Genres (Items)"
      security: []
    put:
      operationId: updateGenre
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0436\u0430\u043D\
        \u0440\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0416\u0430\u043D\u0440\
            ."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Genre"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Genre"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Genre"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Genre"
          description: ""
      tags:
        - "Genres (Items)"
    patch:
      operationId: partialUpdateGenre
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0436\u0430\u043D\
        \u0440\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0416\u0430\u043D\u0440\
            ."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Genre"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Genre"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Genre"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Genre"
          description: ""
      tags:
        - "Genres (Items)"
    delete:
      operationId: destroyGenre
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0436\u0430\u043D\
        \u0440\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0416\u0430\u043D\u0440\
            ."
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - "Genres (Items)"
  # "Publishers (Items)"
  /api/items/publishers/:
    get:
      operationId: listPublishers
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0438\u0437\u0434\
        \u0430\u0442\u0435\u043B\u0435\u0439"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Publisher"
          description: ""
      tags:
        - "Publishers (Items)"
      security: []
    post:
      operationId: createPublisher
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0438\u0437\u0434\
        \u0430\u0442\u0435\u043B\u0435\u0439"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Publisher"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Publisher"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Publisher"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"
          description: ""
      tags:
        - "Publishers (Items)"
  /api/items/publishers/{id}/:
    get:
      operationId: retrievePublisher
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0438\u0437\u0434\
        \u0430\u0442\u0435\u043B\u0435\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0418\u0437\u0434\u0430\
            \u0442\u0435\u043B\u044C."
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"
          description: ""
      tags:
        - "Publishers (Items)"
      security: []
    put:
      operationId: updatePublisher
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0438\u0437\u0434\
        \u0430\u0442\u0435\u043B\u0435\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0418\u0437\u0434\u0430\
            \u0442\u0435\u043B\u044C."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Publisher"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Publisher"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Publisher"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"
          description: ""
      tags:
        - "Publishers (Items)"
    patch:
      operationId: partialUpdatePublisher
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0438\u0437\u0434\
        \u0430\u0442\u0435\u043B\u0435\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0418\u0437\u0434\u0430\
            \u0442\u0435\u043B\u044C."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Publisher"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Publisher"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Publisher"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"
          description: ""
      tags:
        - "Publishers (Items)"
    delete:
      operationId: destroyPublisher
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0438\u0437\u0434\
        \u0430\u0442\u0435\u043B\u0435\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0418\u0437\u0434\u0430\
            \u0442\u0435\u043B\u044C."
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - "Publishers (Items)"
  # "Brands (Items)"
  /api/items/brands/:
    get:
      operationId: listBrands
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0431\u0440\u0435\
        \u043D\u0434\u043E\u0432"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Brand"
          description: ""
      tags:
        - "Brands (Items)"
      security: []
    post:
      operationId: createBrand
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0431\u0440\u0435\
        \u043D\u0434\u043E\u0432"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Brand"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Brand"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Brand"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Brand"
          description: ""
      tags:
        - "Brands (Items)"
  /api/items/brands/{id}/:
    get:
      operationId: retrieveBrand
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0431\u0440\u0435\
        \u043D\u0434\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0431\u0440\u044D\u043D\
            \u0434."
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Brand"
          description: ""
      tags:
        - "Brands (Items)"
      security: []
    put:
      operationId: updateBrand
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0431\u0440\u0435\
        \u043D\u0434\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0431\u0440\u044D\u043D\
            \u0434."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Brand"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Brand"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Brand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Brand"
          description: ""
      tags:
        - "Brands (Items)"
    patch:
      operationId: partialUpdateBrand
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0431\u0440\u0435\
        \u043D\u0434\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0431\u0440\u044D\u043D\
            \u0434."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Brand"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Brand"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Brand"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Brand"
          description: ""
      tags:
        - "Brands (Items)"
    delete:
      operationId: destroyBrand
      description:
        "\u041E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\
        \ \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0431\u0440\u0435\
        \u043D\u0434\u043E\u0432"
      parameters:
        - name: id
          in: path
          required: true
          description:
            "A unique integer value identifying this \u0431\u0440\u044D\u043D\
            \u0434."
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - "Brands (Items)"
  # "Items (Items)"
  /api/items/items/:
    get:
      operationId: listItems
      summary: "Получить все товары"
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0442\u043E\
        \u0432\u0430\u0440\u044B \u0441 \u0443\u0447\u0435\u0442\u043E\u043C \u0432\
        \u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\u0440\u0430\
        \u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - in: query
          name: ordering
          schema:
            type: string
            enum: [price, -price]
          description: "Сортировка по возрастанию или убыванию цены"
          required: false
        - in: query
          name: search
          schema:
            type: string
          description: "Поиск items по title"
          required: false
        - in: query
          name: categories__name
          schema:
            type: string
          description: "Фильтрация по категории"
          required: false
        - in: query
          name: max_price
          schema:
            type: integer
          description: "Фильтрация по максимальной цене"
          required: false
        - in: query
          name: min_price
          schema:
            type: integer
          description: "Фильтрация по минимальной цене"
          required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"
          description: ""
      tags:
        - "Items (Items)"
      security: []
  /api/items/items/{id}/:
    get:
      operationId: retrieveItem
      summary: "Получить товар по id"
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0442\u043E\
        \u0432\u0430\u0440\u044B \u0441 \u0443\u0447\u0435\u0442\u043E\u043C \u0432\
        \u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\u0440\u0430\
        \u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
          description: ""
      tags:
        - "Items (Items)"
      security: []
  # "Books (Items)"
  /api/items/books/:
    get:
      operationId: listGetBooks
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043A\u043D\
        \u0438\u0433\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C \u0432\u043E\
        \u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\u0440\u0430\u043D\
        \u0438\u0447\u0435\u043D\u0438\u0439"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetBook"
          description: ""
      tags:
        - "Books (Items)"
      security: []
    post:
      operationId: createPostBook
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043A\u043D\
        \u0438\u0433\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C \u0432\u043E\
        \u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\u0440\u0430\u043D\
        \u0438\u0447\u0435\u043D\u0438\u0439"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostBook"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostBook"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostBook"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostBook"
          description: ""
      tags:
        - "Books (Items)"
  /api/items/books/{id}/:
    get:
      operationId: retrieveGetBook
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043A\u043D\
        \u0438\u0433\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C \u0432\u043E\
        \u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\u0440\u0430\u043D\
        \u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetBook"
          description: ""
      tags:
        - "Books (Items)"
      security: []
    put:
      operationId: updatePostBook
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043A\u043D\
        \u0438\u0433\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C \u0432\u043E\
        \u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\u0440\u0430\u043D\
        \u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostBook"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostBook"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostBook"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostBook"
          description: ""
      tags:
        - "Books (Items)"
    patch:
      operationId: partialUpdatePostBook
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043A\u043D\
        \u0438\u0433\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C \u0432\u043E\
        \u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\u0440\u0430\u043D\
        \u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostBook"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostBook"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostBook"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostBook"
          description: ""
      tags:
        - "Books (Items)"
    delete:
      operationId: destroyPostBook
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043A\u043D\
        \u0438\u0433\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C \u0432\u043E\
        \u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\u0440\u0430\u043D\
        \u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - "Books (Items)"
  # "Magazines (Items)"
  /api/items/magazines/:
    get:
      operationId: listGetMagazines
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0444\u0438\
        \u0433\u0443\u0440\u043A\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C\
        \ \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\
        \u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetMagazine"
          description: ""
      tags:
        - "Magazines (Items)"
      security: []
    post:
      operationId: createPostMagazine
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0444\u0438\
        \u0433\u0443\u0440\u043A\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C\
        \ \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\
        \u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostMagazine"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostMagazine"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostMagazine"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMagazine"
          description: ""
      tags:
        - "Magazines (Items)"
  /api/items/magazines/{id}/:
    get:
      operationId: retrieveGetMagazine
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0444\u0438\
        \u0433\u0443\u0440\u043A\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C\
        \ \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\
        \u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMagazine"
          description: ""
      tags:
        - "Magazines (Items)"
      security: []
    put:
      operationId: updatePostMagazine
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0444\u0438\
        \u0433\u0443\u0440\u043A\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C\
        \ \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\
        \u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostMagazine"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostMagazine"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostMagazine"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMagazine"
          description: ""
      tags:
        - "Magazines (Items)"
    patch:
      operationId: partialUpdatePostMagazine
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0444\u0438\
        \u0433\u0443\u0440\u043A\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C\
        \ \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\
        \u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostMagazine"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostMagazine"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostMagazine"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMagazine"
          description: ""
      tags:
        - "Magazines (Items)"
    delete:
      operationId: destroyPostMagazine
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0444\u0438\
        \u0433\u0443\u0440\u043A\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C\
        \ \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\
        \u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - "Magazines (Items)"
  # "Figures (Items)"
  /api/items/figures/:
    get:
      operationId: listGetFigures
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0444\u0438\
        \u0433\u0443\u0440\u043A\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C\
        \ \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\
        \u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetFigure"
          description: ""
      tags:
        - "Figures (Items)"
      security: []
    post:
      operationId: createPostFigure
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0444\u0438\
        \u0433\u0443\u0440\u043A\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C\
        \ \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\
        \u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostFigure"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostFigure"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostFigure"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostFigure"
          description: ""
      tags:
        - "Figures (Items)"
  /api/items/figures/{id}/:
    get:
      operationId: retrieveGetFigure
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0444\u0438\
        \u0433\u0443\u0440\u043A\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C\
        \ \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\
        \u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFigure"
          description: ""
      tags:
        - "Figures (Items)"
      security: []
    put:
      operationId: updatePostFigure
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0444\u0438\
        \u0433\u0443\u0440\u043A\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C\
        \ \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\
        \u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostFigure"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostFigure"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostFigure"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostFigure"
          description: ""
      tags:
        - "Figures (Items)"
    patch:
      operationId: partialUpdatePostFigure
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0444\u0438\
        \u0433\u0443\u0440\u043A\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C\
        \ \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\
        \u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostFigure"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PostFigure"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostFigure"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostFigure"
          description: ""
      tags:
        - "Figures (Items)"
    delete:
      operationId: destroyPostFigure
      description:
        "\u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u0444\u0438\
        \u0433\u0443\u0440\u043A\u0438 \u0441 \u0443\u0447\u0435\u0442\u043E\u043C\
        \ \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u043D\u044B\u0445 \u043E\u0433\
        \u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - "Figures (Items)"

  # Services
  # "History (Services)"
  /api/service/history/:
    get:
      operationId: listInvoices
      summary: "Получить историю покупок пользователя"
      description:
        "\u0418\u0441\u0442\u043E\u0440\u0438\u044F \u043F\u043E\u043A\u0443\
        \u043F\u043E\u043A \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\
        \u043B\u044F"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Invoice"
          description: ""
      tags:
        - "History (Services)"
  # "Cart (Services)"
  /api/service/cart/:
    get:
      operationId: getCartInvoice
      summary: "Получить корзину пользователя"
      description:
        "\u0412\u044B\u0432\u0435\u0441\u0442\u0438 \u043A\u043E\u0440\u0437\
        \u0438\u043D\u0443 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\
        \u043B\u044F"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
          description: ""
      tags:
        - "Cart (Services)"
    put:
      operationId: updateInvoice
      summary: "Оплатить корзину"
      description:
        "\u041E\u043F\u043B\u0430\u0442\u0430 \u043A\u043E\u0440\u0437\u0438\
        \u043D\u044B"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoice"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Invoice"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Invoice"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
          description: ""
      tags:
        - "Cart (Services)"
    patch:
      operationId: partialUpdateInvoice
      summary: "Оплатить корзину"
      description:
        "\u041A\u043E\u0440\u0437\u0438\u043D\u0430 \u043F\u043E\u043A\u0443\
        \u043F\u0430\u0442\u0435\u043B\u044F"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoice"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Invoice"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Invoice"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
          description: ""
      tags:
        - "Cart (Services)"
  /api/service/cart/{id}/:
    delete:
      operationId: deleteServiceInvoice
      summary: "Удалить сервис из корзины"
      description:
        "\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u0441\u0435\u0440\u0432\
        \u0438\u0441 \u043F\u043E id \u0438\u0437 \u043A\u043E\u0440\u0437\u0438\u043D\
        \u044B"
      parameters:
        - name: service
          in: query
          description: "Типа сервиса (например purchase/rent)"
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: "Уникальный id сервиса"
          schema:
            type: string
      responses:
        "204":
          description: ""
      tags:
        - "Cart (Services)"
  # "Purchase (Services)"
  /api/service/purchase/:
    post:
      operationId: createAlterPurchase
      summary: "Создать и добавить в корзину покупку товара"
      description:
        "\u041F\u043E\u043A\u0443\u043F\u043A\u0430 \u0442\u043E\u0432\u0430\
        \u0440\u0430"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlterPurchase"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AlterPurchase"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/AlterPurchase"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlterPurchase"
          description: ""
      tags:
        - "Purchase (Services)"
  # "Rent (Services)"
  /api/service/rent/:
    post:
      operationId: createCreateRent
      summary: "Создать и добавить в корзину аренду товара"
      description: "Аренда товара"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRent"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateRent"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateRent"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRent"
          description: ""
      tags:
        - "Rent (Services)"
  /api/service/rent/{id}/:
    get:
      operationId: retrieveCreateRent
      summary: "Получить существующий экземпляр аренды товара"
      description:
        "\u0410\u0440\u0435\u043D\u0434\u0430 \u0442\u043E\u0432\u0430\u0440\
        \u0430"
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRent"
          description: ""
      tags:
        - "Rent (Services)"

  # Tokens
  /api/token/:
    post:
      operationId: createTokenObtainPair
      summary: "Получить access token и refresh token по логину/паролю"
      description:
        "Takes a set of user credentials and returns an access and refresh
        JSON web token pair to prove the authentication of those credentials."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenObtainPair"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TokenObtainPair"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/TokenObtainPair"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenObtainPair"
          description: ""
      tags:
        - "Tokens (auth)"
      security: []
  /api/token/refresh/:
    post:
      operationId: createTokenRefresh
      summary: "Обновить refresh token"
      description:
        "Takes a refresh type JSON web token and returns an access type
        JSON web token if the refresh token is valid."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRefresh"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TokenRefresh"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/TokenRefresh"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenRefresh"
          description: ""
      tags:
        - "Tokens (auth)"
components:
  schemas:
    GetCustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 50
        is_staff:
          type: boolean
          description:
            "\u041E\u0442\u043C\u0435\u0442\u044C\u0442\u0435, \u0435\u0441\
            \u043B\u0438 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\
            \u043B\u044C \u043C\u043E\u0436\u0435\u0442 \u0432\u0445\u043E\u0434\u0438\
            \u0442\u044C \u0432 \u0430\u0434\u043C\u0438\u043D\u0438\u0441\u0442\u0440\
            \u0430\u0442\u0438\u0432\u043D\u0443\u044E \u0447\u0430\u0441\u0442\u044C\
            \ \u0441\u0430\u0439\u0442\u0430."
        is_active:
          type: boolean
          description:
            "\u041E\u0442\u043C\u0435\u0442\u044C\u0442\u0435, \u0435\u0441\
            \u043B\u0438 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\
            \u043B\u044C \u0434\u043E\u043B\u0436\u0435\u043D \u0441\u0447\u0438\u0442\
            \u0430\u0442\u044C\u0441\u044F \u0430\u043A\u0442\u0438\u0432\u043D\u044B\
            \u043C. \u0423\u0431\u0435\u0440\u0438\u0442\u0435 \u044D\u0442\u0443\
            \ \u043E\u0442\u043C\u0435\u0442\u043A\u0443 \u0432\u043C\u0435\u0441\u0442\
            \u043E \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u044F \u0443\u0447\u0451\
            \u0442\u043D\u043E\u0439 \u0437\u0430\u043F\u0438\u0441\u0438."
        date_joined:
          type: string
          format: date-time
        last_login:
          type: string
          format: date-time
          nullable: true
        profile:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            phone:
              type: string
              maxLength: 20
            birthday:
              type: string
              format: date
              nullable: true
            region:
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
                region:
                  type: string
                  maxLength: 50
                country:
                  type: string
                  maxLength: 50
              required:
                - region
                - country
            currency:
              type: integer
              maximum: 2147483647
              minimum: 0
            email_confirmed:
              type: boolean
            age:
              type: string
              readOnly: true
            user:
              type: integer
          required:
            - region
            - user
        password:
          type: string
          maxLength: 128
      required:
        - email
        - profile
        - password
    GetProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone:
          type: string
          maxLength: 20
        birthday:
          type: string
          format: date
          nullable: true
        region:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            region:
              type: string
              maxLength: 50
            country:
              type: string
              maxLength: 50
          required:
            - region
            - country
        currency:
          type: integer
          maximum: 2147483647
          minimum: 0
        email_confirmed:
          type: boolean
        age:
          type: string
          readOnly: true
        user:
          type: integer
      required:
        - region
        - user
    Invoice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          type: integer
        status:
          enum:
            - 0
            - 1
            - 2
          type: integer
        date_created:
          type: string
          format: date-time
          readOnly: true
        status_updated:
          type: string
          format: date-time
        price_total:
          type: string
          readOnly: true
        final_price:
          type: string
          readOnly: true
        purchase_set:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              item:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  title:
                    type: string
                    maxLength: 70
                  price:
                    type: integer
                    maximum: 2147483647
                    minimum: 0
                  photo:
                    type: string
                    format: binary
                    nullable: true
                  slug:
                    type: string
                    maxLength: 50
                    pattern: ^[-a-zA-Z0-9_]+$
                  type:
                    type: string
                    readOnly: true
                required:
                  - title
                  - price
                  - slug
              invoice:
                type: integer
              quantity:
                type: integer
                maximum: 32767
                minimum: 0
              path_template:
                type: string
                readOnly: true
            required:
              - item
              - invoice
          readOnly: true
        rent_set:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              item:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  title:
                    type: string
                    maxLength: 70
                  price:
                    type: integer
                    maximum: 2147483647
                    minimum: 0
                  photo:
                    type: string
                    format: binary
                    nullable: true
                  slug:
                    type: string
                    maxLength: 50
                    pattern: ^[-a-zA-Z0-9_]+$
                  type:
                    type: string
                    readOnly: true
                required:
                  - title
                  - price
                  - slug
              invoice:
                type: integer
              quantity:
                type: integer
                maximum: 32767
                minimum: 0
              path_template:
                type: string
                readOnly: true
              date_from:
                type: string
                format: date
              date_to:
                type: string
                format: date
              daily_payment:
                type: integer
                maximum: 32767
                description:
                  "\u0415\u0436\u0435\u0434\u043D\u0435\u0432\u043D\u044B\
                  \u0439 \u043F\u043B\u0430\u0442\u0435\u0436"
                minimum: 0
              price:
                type: string
                readOnly: true
            required:
              - item
              - invoice
          readOnly: true
      required:
        - user_id
        - status
    CreateRent:
      type: object
      properties:
        item:
          type: integer
        date_from:
          type: string
          format: date
        date_to:
          type: string
          format: date
      required:
        - item
    Language:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 5
        name:
          type: string
          maxLength: 30
      required:
        - code
        - name
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
    Author:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
        photo:
          type: string
          format: binary
          nullable: true
      required:
        - name
    Genre:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
      required:
        - name
    Publisher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        address:
          type: string
      required:
        - name
        - address
    Brand:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 70
        description:
          type: string
          maxLength: 500
      required:
        - name
    Item:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 70
        description:
          type: string
        count_available:
          type: integer
          maximum: 32767
          minimum: 0
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        photo:
          type: string
          format: binary
          nullable: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 50
              description:
                type: string
        type:
          type: string
          readOnly: true
      required:
        - title
        - price
        - slug
        - categories
    GetBook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 50
              description:
                type: string
        author:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 50
            required:
              - name
        genre:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 30
            required:
              - name
        language:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            code:
              type: string
              maxLength: 5
            name:
              type: string
              maxLength: 30
          required:
            - code
            - name
        publisher:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
            - name
        title:
          type: string
          maxLength: 70
        description:
          type: string
        count_available:
          type: integer
          maximum: 32767
          minimum: 0
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        photo:
          type: string
          format: binary
          nullable: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        year:
          type: string
          format: date
      required:
        - categories
        - author
        - genre
        - language
        - publisher
        - title
        - price
        - slug
        - year
    GetMagazine:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        language:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            code:
              type: string
              maxLength: 5
            name:
              type: string
              maxLength: 30
          required:
            - code
            - name
        categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 50
              description:
                type: string
        title:
          type: string
          maxLength: 70
        description:
          type: string
        count_available:
          type: integer
          maximum: 32767
          minimum: 0
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        photo:
          type: string
          format: binary
          nullable: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        date:
          type: string
          format: date
        number:
          type: integer
          maximum: 32767
          nullable: true
          minimum: 0
      required:
        - language
        - categories
        - title
        - price
        - slug
    GetFigure:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        brand:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 70
            description:
              type: string
              maxLength: 500
          required:
            - name
        categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 50
              description:
                type: string
        title:
          type: string
          maxLength: 70
        description:
          type: string
        count_available:
          type: integer
          maximum: 32767
          minimum: 0
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        photo:
          type: string
          format: binary
          nullable: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        character:
          type: string
          maxLength: 80
        model_name:
          type: string
          maxLength: 80
      required:
        - brand
        - categories
        - title
        - price
        - slug
    PostCustomUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 50
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        profile:
          type: object
          properties:
            phone:
              type: string
            birthday:
              type: string
              format: date
              nullable: true
            region:
              type: integer
          required:
            - phone
            - region
      required:
        - email
        - password
        - password2
        - profile
    PostProfile:
      type: object
      properties:
        phone:
          type: string
        birthday:
          type: string
          format: date
          nullable: true
        region:
          type: integer
      required:
        - phone
        - region
    AlterPurchase:
      type: object
      properties:
        item:
          type: integer
        quantity:
          type: integer
          maximum: 32767
          minimum: 0
      required:
        - item
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
        - email
        - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
        - refresh
    PostBook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        categories:
          type: array
          items:
            type: integer
        author:
          type: array
          items:
            type: integer
        genre:
          type: array
          items:
            type: integer
        language:
          type: integer
        publisher:
          type: integer
        title:
          type: string
          maxLength: 70
        description:
          type: string
        count_available:
          type: integer
          maximum: 32767
          minimum: 0
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        photo:
          type: string
          format: binary
          nullable: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        year:
          type: string
          format: date
      required:
        - categories
        - author
        - genre
        - language
        - publisher
        - title
        - price
        - slug
        - year
    PostMagazine:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        language:
          type: integer
        title:
          type: string
          maxLength: 70
        description:
          type: string
        count_available:
          type: integer
          maximum: 32767
          minimum: 0
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        photo:
          type: string
          format: binary
          nullable: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        date:
          type: string
          format: date
        number:
          type: integer
          maximum: 32767
          nullable: true
          minimum: 0
        categories:
          type: array
          items:
            type: integer
      required:
        - language
        - title
        - price
        - slug
    PostFigure:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        brand:
          type: integer
        title:
          type: string
          maxLength: 70
        description:
          type: string
        count_available:
          type: integer
          maximum: 32767
          minimum: 0
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        photo:
          type: string
          format: binary
          nullable: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        character:
          type: string
          maxLength: 80
        model_name:
          type: string
          maxLength: 80
        categories:
          type: array
          items:
            type: integer
      required:
        - brand
        - title
        - price
        - slug
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
          maxLength: 128
        new_password1:
          type: string
          writeOnly: true
          maxLength: 128
        new_password2:
          type: string
          writeOnly: true
          maxLength: 128
      required:
        - old_password
        - new_password1
        - new_password2
  securitySchemes:
    jwt_token:
      type: http
      scheme: bearer
      bearerFormat: JWT
